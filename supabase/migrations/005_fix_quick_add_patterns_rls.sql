-- Fix RLS policies for quick_add_patterns table
-- The current policies use complex subqueries that may not work correctly with the trigger

-- Drop existing policies
DROP POLICY IF EXISTS "Users can view patterns for own saved items" ON quick_add_patterns;
DROP POLICY IF EXISTS "Users can insert patterns for own saved items" ON quick_add_patterns;
DROP POLICY IF EXISTS "Users can update patterns for own saved items" ON quick_add_patterns;
DROP POLICY IF EXISTS "Users can delete patterns for own saved items" ON quick_add_patterns;

-- Create simpler policies that work with the auto-generation trigger
-- Since patterns are auto-generated by a trigger, we need to allow the trigger to insert them
-- We'll use a function to check ownership through the saved_items table

-- Create a function to check if a user owns a saved item
CREATE OR REPLACE FUNCTION user_owns_saved_item(item_id UUID, user_auth_id UUID)
RETURNS BOOLEAN AS $$
BEGIN
    RETURN EXISTS (
        SELECT 1 FROM saved_items si
        JOIN users u ON si.user_id = u.id
        WHERE si.id = item_id AND u.auth_user_id = user_auth_id
    );
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Create new policies using the function
CREATE POLICY "Users can view patterns for own saved items" ON quick_add_patterns
    FOR SELECT USING (
        user_owns_saved_item(saved_item_id, auth.uid())
    );

CREATE POLICY "Users can insert patterns for own saved items" ON quick_add_patterns
    FOR INSERT WITH CHECK (
        user_owns_saved_item(saved_item_id, auth.uid())
    );

CREATE POLICY "Users can update patterns for own saved items" ON quick_add_patterns
    FOR UPDATE USING (
        user_owns_saved_item(saved_item_id, auth.uid())
    );

CREATE POLICY "Users can delete patterns for own saved items" ON quick_add_patterns
    FOR DELETE USING (
        user_owns_saved_item(saved_item_id, auth.uid())
    ); 